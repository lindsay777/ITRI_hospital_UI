# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2018-10-04 10:41
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_auto_20181003_0944'),
    ]

    operations = [
        migrations.CreateModel(
            name='APSPINE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=50, null=True)),
                ('scantype', models.CharField(max_length=15, null=True)),
                ('tscore', models.CharField(max_length=30, null=True)),
                ('zscore', models.CharField(max_length=30, null=True)),
                ('region', models.CharField(max_length=30, null=True)),
                ('apspine', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='COMBINATION',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=50, null=True)),
                ('scantype', models.CharField(max_length=15, null=True)),
                ('tscore', models.CharField(max_length=30, null=True)),
                ('zscore', models.CharField(max_length=30, null=True)),
                ('region', models.CharField(max_length=30, null=True)),
                ('lva', models.CharField(max_length=50, null=True)),
                ('apspine', models.CharField(max_length=100, null=True)),
                ('dualfemur', models.CharField(max_length=100, null=True)),
                ('combination', models.CharField(max_length=100, null=True)),
                ('t7', models.CharField(max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DUALFEMUR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=50, null=True)),
                ('scantype', models.CharField(max_length=15, null=True)),
                ('tscore', models.CharField(max_length=30, null=True)),
                ('zscore', models.CharField(max_length=30, null=True)),
                ('region', models.CharField(max_length=30, null=True)),
                ('dualfemur', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FRAX',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=50, null=True)),
                ('scantype', models.CharField(max_length=15, null=True)),
                ('fracture', models.CharField(max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LVA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=50, null=True)),
                ('scantype', models.CharField(max_length=15, null=True)),
                ('lva', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PATIENT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=50, null=True)),
                ('filename', models.CharField(max_length=50, null=True)),
                ('name', models.CharField(max_length=50)),
                ('sex', models.CharField(max_length=1, null=True)),
                ('age', models.CharField(max_length=5, null=True)),
                ('mp', models.CharField(max_length=5, null=True)),
            ],
        ),
        migrations.DeleteModel(
            name='File',
        ),
    ]
